module EX_MEM(
  input [2:0] RS_EX_func3,
  input [31:0] immediate,
  input [31:0]RS_EX_PC_ALU,
  input [31:0]Operand1,
  input [31:0]Operand2,
  input [6:0] RS_EX_alu_Physical_address,
  input [6:0] RS_EX_alu_RS_address,
  input ALU_done,
  input [31:0]Operand1_Mul,
  input [31:0]Operand2_Mul,
  input [6:0] RS_EX_Mul_Physical_address,
  input [6:0] RS_EX_Mul_RS_address,
  input Mul_done,
  input [31:0]RS_EX_PC_Mul,
  input [31:0]Operand1_Div,
  input [31:0]Operand2_Div,
  input [6:0] RS_EX_Div_Physical_address,
  input [6:0] RS_EX_Div_RS_address,
  input [31:0]RS_EX_PC_Div,
  output [2:0] RS_EX_func3_out,
  output [31:0] immediate_out,
  output [31:0]RS_EX_PC_ALU_out,
  output [6:0] RS_EX_alu_Physical_address_out,
  output [6:0] RS_EX_alu_RS_address_out,
  output ALU_done_out,
  output [63:0] Mul_Result,
  output [6:0] RS_EX_Mul_Physical_address_out,
  output [6:0] RS_EX_Mul_RS_address_out,
  output Mul_done_out,
  output [31:0] quotient,
  output [31:0] remainder,
  output [31:0]RS_EX_PC_Mul_out,
  output [6:0] RS_EX_Div_Physical_address_out,
  output [6:0] RS_EX_Div_RS_address_out,
  output [31:0]RS_EX_PC_Div_out
   );
   wire[3:0] ALUOP;
   ALU ALU(.A(Operand1),.B(Operand2),.ALUop(ALUop),.subtract
endmodule
