module address_mapper(
    input [6:0] opcode,
    input [2:0] funct3,
    input [6:0] funct7,
    output reg [5:0] mapped_address
);

always @(*) begin
    case(opcode)
        // R-type
        7'b0110011: begin
            case(funct3)
                3'b000: mapped_address = (funct7 == 7'b0000000) ? 6'd0 : // ADD
                                        (funct7 == 7'b0100000) ? 6'd1 : // SUB
                                        6'd63; // 예외 처리
                3'b111: mapped_address = 6'd2; // AND
                3'b110: mapped_address = 6'd3; // OR
                3'b100: mapped_address = 6'd4; // XOR
                3'b001: mapped_address = 6'd5; // SLL
                3'b101: mapped_address = (funct7 == 7'b0000000) ? 6'd6 : // SRL
                                        (funct7 == 7'b0100000) ? 6'd7 : // SRA
                                        6'd63; // 예외 처리
                3'b010: mapped_address = 6'd8; // SLT
                3'b011: mapped_address = 6'd9; // SLTU
                default: mapped_address = 6'd63;
            endcase
        end
        // Load 통합 주소
        7'b0000011: mapped_address = 6'd10; // 모든 Load 명령어
        // Store 통합 주소
        7'b0100011: mapped_address = 6'd11; // 모든 Store 명령어
        // B-type Branch operations
        7'b1100011: mapped_address = 6'd12; // Branches (BEQ, BNE, BLT, BGE, BLTU, BGEU)
        // I-type Immediate and ALU operations
        7'b0010011: begin
            case(funct3)
                3'b000: mapped_address = 6'd13; // ADDI
                3'b010: mapped_address = 6'd14; // SLTI
                3'b011: mapped_address = 6'd15; // SLTIU
                3'b100: mapped_address = 6'd16; // XORI
                3'b110: mapped_address = 6'd17; // ORI
                3'b111: mapped_address = 6'd18; // ANDI
                3'b001: mapped_address = 6'd19; // SLLI
                3'b101: mapped_address = (funct7 == 7'b0000000) ? 6'd20 : // SRLI
                                        (funct7 == 7'b0100000) ? 6'd21 : // SRAI
                                        6'd63;
                default: mapped_address = 6'd63;
            endcase
        end
        // LUI
        7'b0110111: mapped_address = 6'd22;
        // AUIPC
        7'b0010111: mapped_address = 6'd23;
        // JAL
        7'b1101111: mapped_address = 6'd24;
        // JALR
        7'b1100111: mapped_address = 6'd25;
        default: mapped_address = 6'd63; // 예외 처리
    endcase
end

endmodule
