module Hazard_Detection_unit_tb;

    // Inputs
    reg ID_EX_MemRead;
    reg [4:0] IF_ID_Rs1;
    reg [4:0] IF_ID_Rd;
    reg [4:0] ID_EX_Rd;
    
    // Outputs
    wire PC_Stall;
    wire IF_ID_Stall;
    wire Control_Sig_Stall;

    // Instantiate the Hazard Detection Unit
    Hazard_Detection_unit Hazard_Detection_unit(
        .ID_EX_MemRead(ID_EX_MemRead),
        .IF_ID_Rs1(IF_ID_Rs1),
        .IF_ID_Rd(IF_ID_Rd),
        .ID_EX_Rd(ID_EX_Rd),
        .PC_Stall(PC_Stall),
        .IF_ID_Stall(IF_ID_Stall),
        .Control_Sig_Stall(Control_Sig_Stall)
    );

   
    initial begin
        // Test case 1
        ID_EX_MemRead = 0;
        IF_ID_Rs1 = 3;
        IF_ID_Rd = 2;
        ID_EX_Rd = 2;
        #10;
        
        // Test case 2
        ID_EX_MemRead = 1;
        IF_ID_Rs1 = 5;
        IF_ID_Rd = 10;
        ID_EX_Rd = 5;
        #10;
        
        // Test case 3
        ID_EX_MemRead = 1;
        IF_ID_Rs1 = 10;
        IF_ID_Rd = 5;
        ID_EX_Rd = 5;
        #10;
        
        // Test case 4
        ID_EX_MemRead = 0;
        IF_ID_Rs1 = 4;
        IF_ID_Rd = 3;
        ID_EX_Rd = 2;
        #10;
        // Test case 5
        ID_EX_MemRead = 1;
        IF_ID_Rs1 = 4;
        IF_ID_Rd = 3;
        ID_EX_Rd = 2;
        #10;
        $finish;
    end

endmodule
